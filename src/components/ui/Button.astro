---
import { Icon } from 'astro-icon/components';
import { twMerge } from 'tailwind-merge';
import type { CallToAction as Props } from '~/types';

const {
  variant = 'secondary',
  target,
  text = Astro.slots.render('default'),
  icon = '',
  class: className = '',
  type,
  ...rest
} = Astro.props;

// Map variants to CSS classes
const variants = {
  primary: 'btn-primary',
  secondary: 'btn-secondary',
  'secondary-dark': 'btn-secondary-dark',
  tertiary: 'btn-tertiary',
  link: 'btn-link',
  outline: 'btn-outline',
  ghost: 'btn-ghost',
  cta: 'btn-cta',
  phone: 'btn-phone',
};

// Build the final class string
const buttonClasses = twMerge(variants[variant] || 'btn-secondary', className);
---

{
  type === 'button' || type === 'submit' || type === 'reset' ? (
    <button type={type} class={buttonClasses} {...rest}>
      {icon && <Icon name={icon} class="w-5 h-5 mr-2 rtl:mr-0 rtl:ml-2" />}
      <Fragment set:html={text} />
    </button>
  ) : (
    <a class={buttonClasses} {...(target ? { target: target, rel: 'noopener noreferrer' } : {})} {...rest}>
      {icon && <Icon name={icon} class="w-5 h-5 mr-2 rtl:mr-0 rtl:ml-2" />}
      <Fragment set:html={text} />
    </a>
  )
}
