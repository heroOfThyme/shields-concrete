---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { CallToAction, Widget } from '~/types';
import Headline from '~/components/ui/Headline.astro';
import Button from '~/components/ui/Button.astro';
import { Icon } from 'astro-icon/components';

interface Props extends Widget {
  title?: string;
  subtitle?: string;
  tagline?: string;
  callToAction?: CallToAction;
  actions?: string | CallToAction[];
  image?: string | unknown;
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  actions = await Astro.slots.render('actions'),

  id,
  isDark = true,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper
  id={id}
  isDark={isDark}
  containerClass={`max-w-6xl mx-auto text-center ${classes?.container ?? ''}`}
  bg={bg}
>
  <Fragment slot="bg">
    <slot name="bg">
      {bg ? <Fragment set:html={bg} /> : null}
    </slot>
  </Fragment>

  <div class="relative z-20">
    <Headline
      title={title}
      subtitle={subtitle}
      tagline={tagline}
      classes={{
        container: 'max-w-4xl mx-auto text-center mb-12',
        title: 'text-4xl md:text-5xl lg:text-6xl font-black leading-tight mb-6 text-white',
        subtitle: 'text-xl md:text-2xl text-slate-200 font-medium leading-relaxed relative',
      }}
    />

    {
      actions && (
        <div class="flex flex-col sm:flex-row gap-4 justify-center items-center intersect-once motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade mb-12">
          {Array.isArray(actions) ? (
            actions.map((action, index) => (
              <div class="sm:w-auto">
                <Button
                  {...(action || {})}
                  class={`px-8 py-4 font-bold shadow-2xl transition-all duration-300 ${
                    index === 0
                      ? 'text-white border-2 transform hover:scale-105'
                      : 'bg-white hover:bg-slate-100 text-slate-900 border-2 border-white hover:border-slate-200 transform hover:scale-105'
                  }`}
                  style={
                    index === 0
                      ? `background-color: var(--aw-color-primary); border-color: var(--aw-color-primary);`
                      : ''
                  }
                  onmouseover={
                    index === 0
                      ? `this.style.backgroundColor='var(--aw-color-secondary)'; this.style.borderColor='var(--aw-color-secondary)';`
                      : ''
                  }
                  onmouseout={
                    index === 0
                      ? `this.style.backgroundColor='var(--aw-color-primary)'; this.style.borderColor='var(--aw-color-primary)';`
                      : ''
                  }
                />
              </div>
            ))
          ) : (
            <Fragment set:html={actions} />
          )}
        </div>
      )
    }

    <!-- Trust indicators -->
    <div class="flex justify-center items-center space-x-8 text-slate-300 opacity-80">
      <div class="flex items-center space-x-2">
        <Icon name="tabler:phone" class="w-5 h-5" />
        <span class="text-sm font-medium">Call Today</span>
      </div>
      <div class="w-px h-6 bg-slate-400"></div>
      <div class="flex items-center space-x-2">
        <Icon name="tabler:clock" class="w-5 h-5" />
        <span class="text-sm font-medium">Fast Response</span>
      </div>
      <div class="w-px h-6 bg-slate-400"></div>
      <div class="flex items-center space-x-2">
        <Icon name="tabler:shield-check" class="w-5 h-5" />
        <span class="text-sm font-medium">Guaranteed</span>
      </div>
    </div>
  </div>
</WidgetWrapper>
